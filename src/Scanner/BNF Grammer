// note 3 = epsilon or nothing
1- program -> int main ( ) { stmt_sequence } $

2- stmt_sequence -> statement stmt_sequence'

3- stmt_sequence' -> stmt_sequence | 3

4- statement -> if_stmt | assign_stmt ; | declare_stmt ;

//I will use disambiguate rule to handle this, that's because the ll1 parser does not handle dangling else problem
5- if_stmt -> if condition { stmt_sequence } else_part

6- else_part -> else { stmt_sequence } | 3

7- condition -> ( exp comp_sign exp )

8- comp_sign ->  < | > | == | >= | <= | 3

9- exp -> term exp'

10- exp' -> add_op term exp' | 3

11- add_op -> + | -

12- term -> factor term'

13- term' -> mul_op factor term' | 3

14- mul_op -> * | /

15- factor -> ( exp ) | number | identifier

16- declare_stmt -> datatype identifier x

17- x -> = exp | 3

18- assign_stmt -> identifier = exp

19- datatype-> int | float | char